// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-down-name: 'arrow-down'
$arrow-down-x: 0px
$arrow-down-y: 38px
$arrow-down-offset-x: 0px
$arrow-down-offset-y: -38px
$arrow-down-width: 16px
$arrow-down-height: 11px
$arrow-down-total-width: 52px
$arrow-down-total-height: 49px
$arrow-down-image: 'sprite.png'
$arrow-down: (0px, 38px, 0px, -38px, 16px, 11px, 52px, 49px, 'sprite.png', 'arrow-down', )
$close-name: 'close'
$close-x: 38px
$close-y: 0px
$close-offset-x: -38px
$close-offset-y: 0px
$close-width: 14px
$close-height: 14px
$close-total-width: 52px
$close-total-height: 49px
$close-image: 'sprite.png'
$close: (38px, 0px, -38px, 0px, 14px, 14px, 52px, 49px, 'sprite.png', 'close', )
$error-name: 'error'
$error-x: 16px
$error-y: 22px
$error-offset-x: -16px
$error-offset-y: -22px
$error-width: 14px
$error-height: 15px
$error-total-width: 52px
$error-total-height: 49px
$error-image: 'sprite.png'
$error: (16px, 22px, -16px, -22px, 14px, 15px, 52px, 49px, 'sprite.png', 'error', )
$magniffic-glass-name: 'magniffic-glass'
$magniffic-glass-x: 38px
$magniffic-glass-y: 14px
$magniffic-glass-offset-x: -38px
$magniffic-glass-offset-y: -14px
$magniffic-glass-width: 14px
$magniffic-glass-height: 14px
$magniffic-glass-total-width: 52px
$magniffic-glass-total-height: 49px
$magniffic-glass-image: 'sprite.png'
$magniffic-glass: (38px, 14px, -38px, -14px, 14px, 14px, 52px, 49px, 'sprite.png', 'magniffic-glass', )
$phone-name: 'phone'
$phone-x: 0px
$phone-y: 0px
$phone-offset-x: 0px
$phone-offset-y: 0px
$phone-width: 22px
$phone-height: 22px
$phone-total-width: 52px
$phone-total-height: 49px
$phone-image: 'sprite.png'
$phone: (0px, 0px, 0px, 0px, 22px, 22px, 52px, 49px, 'sprite.png', 'phone', )
$radio-active-name: 'radio-active'
$radio-active-x: 22px
$radio-active-y: 0px
$radio-active-offset-x: -22px
$radio-active-offset-y: 0px
$radio-active-width: 16px
$radio-active-height: 16px
$radio-active-total-width: 52px
$radio-active-total-height: 49px
$radio-active-image: 'sprite.png'
$radio-active: (22px, 0px, -22px, 0px, 16px, 16px, 52px, 49px, 'sprite.png', 'radio-active', )
$radio-default-name: 'radio-default'
$radio-default-x: 0px
$radio-default-y: 22px
$radio-default-offset-x: 0px
$radio-default-offset-y: -22px
$radio-default-width: 16px
$radio-default-height: 16px
$radio-default-total-width: 52px
$radio-default-total-height: 49px
$radio-default-image: 'sprite.png'
$radio-default: (0px, 22px, 0px, -22px, 16px, 16px, 52px, 49px, 'sprite.png', 'radio-default', )
$spritesheet-width: 52px
$spritesheet-height: 49px
$spritesheet-image: 'sprite.png'
$spritesheet-sprites: ($arrow-down, $close, $error, $magniffic-glass, $phone, $radio-active, $radio-default, )
$spritesheet: (52px, 49px, 'sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
